<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.recipe.a.dao.MembersDao">


	<select id="getSalt" parameterType="String" resultType="com.recipe.a.dto.MembersDto">
		SELECT SALT FROM MEMBERS
		WHERE MEMBERID = #{memberId}
	</select>
	
	<select id="login" parameterType="String" resultType="com.recipe.a.dto.MembersDto">
		SELECT MEMBERID, MEMBERNICKNAME, MEMBEREMAIL, MEMBERPHONE, MEMBERCOIN, MEMBERMAINADDR, MEMBERDETAILADDR,
			   MEMBERZIPCODE, MEMBERGENDER, MEMBERNAME, MEMBERGRADE
		FROM MEMBERS
		WHERE MEMBERPWD = #{memberPwd}
	</select>
	
	<!-- 아이디 중복체크 -->
	<select id="idCheck" parameterType="com.recipe.a.dto.MembersDto" resultType="Integer">
		SELECT COUNT(*)
		FROM MEMBERS
		WHERE MEMBERID = #{memberId} 
	</select>
	
	<!-- id체크 후 Dto 반환 -->
	<select id="idCheckGetSalt" parameterType="com.recipe.a.dto.MembersDto" resultType="String">
		SELECT SALT
		FROM MEMBERS
		WHERE MEMBERID = #{memberId} 
	</select>
	
	<!-- 회원가입 -->
	<insert id="regist" parameterType="com.recipe.a.dto.MembersDto">
		INSERT INTO MEMBERS(
			memberId, memberPwd, memberNickname, memberEmail,
			memberPhone, memberCoin, memberMainAddr, memberDetailAddr,
			memberZipcode, memberGender, memberName, memberGrade, salt)
		VALUES(#{memberId}, #{memberPwd}, #{memberNickname}, #{memberEmail},
			   #{memberPhone}, #{memberCoin}, #{memberMainAddr}, #{memberDetailAddr},
			   #{memberZipcode}, #{memberGender}, #{memberName}, #{memberGrade}, #{salt})
	</insert>
	
	<select id="test1" resultType="com.recipe.a.dto.RecipeDto">
		SELECT *
		FROM RECIPE
	</select>

	<!-- 이메일 업데이트  -->
	<update id="updateEmail" parameterType="String">
		UPDATE MEMBERS
		SET MEMBEREMAIL = #{memberEmail}
		WHERE MEMBERID = #{memberId}
	</update>
	<!-- 닉네임 업데이트 -->
	<update id="updateNickname" parameterType="String">
		UPDATE MEMBERS
		SET MEMBERNICKNAME = #{memberNickname}
		WHERE MEMBERID = #{memberId}
	</update>
	<!-- 전화번호 업데이트 -->
	<update id="updatePhone" parameterType="String">
		UPDATE MEMBERS
		SET MEMBERNICKNAME = #{memberPhone}
		WHERE MEMBERID = #{memberId}
	</update>
	<!-- 주소 업데이트 -->
	<update id="updateAddr" parameterType="com.recipe.a.dto.MembersDto">
		UPDATE MEMBERS
		SET MEMBERMAINADDR = #{memberMainAddr}, MEMBERDETAILADDR = #{memberDetailAddr}, MEMBERZIPCODE = #{memberZipcode}
		WHERE MEMBERID = #{memberId}
		
	</update>
	
	<!-- 웹 업데이트를 위한 XML 기능 -->
	<update id="updatePersonalInfo" parameterType="com.recipe.a.dto.MembersDto">
		UPDATE MEMBERS
		SET MEMBERID=#{memberId}
		<if test="salt != null and salt != ''">
			, SALT=#{salt}
		</if>
		<if test="memberPwd != null and memberPwd != ''">
			, MEMBERPWD=#{memberPwd}
		</if>
		<if test="memberName != null and memberName != ''">
			, MEMBERNAME=#{memberName}
		</if>
		<if test="memberNickname != null and memberNickname != ''">
			, MEMBERNICKNAME=#{memberNickname}
		</if>
		<if test="memberGender != null and memberGender != ''">
			, MEMBERGENDER=#{memberGender}
		</if>
		<if test="memberEmail != null and memberEmail != ''">
			, MEMBEREMAIL=#{memberEmail}
		</if>
		WHERE MEMBERID = #{memberId}
	</update>
		<update id="updatePaymentInfo" parameterType="com.recipe.a.dto.MembersDto">
		UPDATE MEMBERS
		SET MEMBERID=#{memberId}
		<if test="memberPhone != null and memberPhone != ''">
			, MEMBERPHONE=#{memberPhone}
		</if>
		<if test="memberMainAddr != null and memberMainAddr != ''">
			, MEMBERMAINADDR=#{memberMainAddr}
		</if>
		<if test="memberDetailAddr != null and memberDetailAddr != ''">
			, MEMBERDETAILADDR=#{memberDetailAddr}
		</if>
		<if test="memberZipcode != null and memberZipcode != ''">
			, MEMBERZIPCODE=#{memberZipcode}
		</if>
		WHERE MEMBERID = #{memberId}
	</update>
	<select id="updateLoggedInfo" parameterType="String" resultType="com.recipe.a.dto.MembersDto">
		SELECT MEMBERID, MEMBERNICKNAME, MEMBEREMAIL, MEMBERPHONE, MEMBERCOIN, MEMBERMAINADDR, MEMBERDETAILADDR,
			   MEMBERZIPCODE, MEMBERGENDER, MEMBERNAME, MEMBERGRADE
		FROM MEMBERS
		WHERE MEMBERID = #{memberId}
	</select>
	
</mapper>